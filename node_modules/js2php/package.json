{
  "author": {
    "name": "Endel Dreyer"
  },
  "bin": {
    "js2php": "js2php"
  },
  "bugs": {
    "url": "https://github.com/endel/js2php/issues"
  },
  "dependencies": {
    "espree": "~2.2.3"
  },
  "description": "JavaScript to PHP transpiler.",
  "devDependencies": {
    "assert": "~1.4.1",
    "browserify": "~16.2.2",
    "mocha": "~5.2.0"
  },
  "gitHead": "da730e8bef61448d66efcb6291f71429b60e4a10",
  "homepage": "https://github.com/endel/js2php#readme",
  "keywords": [
    "javascript",
    "php",
    "transpiler",
    "transcompiler"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "js2php",
  "optionalDependencies": {},
  "readme": "js2php\n===\n\n[![Build status](https://travis-ci.org/endel/js2php.svg?branch=master)](https://travis-ci.org/endel/js2php)\n\nJavaScript to PHP source-to-source transpiler.  [Online demo](http://endel.github.io/js2php)\n\n**This is an experiment. Please do not use it.**\n\nInstallation\n---\n\n- Install [nodejs](http://nodejs.org/)\n- Install js2php globally: `npm install -g js2php`\n\nUsage\n---\n\nConvert a single JavaScript file into PHP:\n\n```\njs2php examples/simple.js > simple.php\n```\n\nSince `js2php` outputs the PHP code to stdout, you may run it right after\nconversion:\n\n```\njs2php examples/class.js | php\n```\n\nFeatures\n---\n\nWhat does it converts?\n\n- Classes (ES6)\n- Getters and Setters (ES6)\n- Namespaces (ES6)\n- Loops (while / for / do-while / for-of / for-in)\n- Arrow functions (ES6)\n- Template strings (ES6)\n- Functions and closures\n- Conditionals\n- [Core JavaScript](core)\n  - Array\n    - Array.prototype.unshift\n    - Array.prototype.shift\n    - Array.prototype.reverse\n    - Array.prototype.push\n    - Array.prototype.pop\n    - Array.prototype.join\n    - Array.prototype.splice\n    - Array.prototype.indexOf\n    - Array.prototype.length\n  - JSON\n    - JSON.parse\n    - JSON.stringify\n  - Math\n    - Math.E\n    - Math.LN2\n    - Math.LN10\n    - Math.LOG2E\n    - Math.LOG10E\n    - Math.PI\n    - Math.SQRT2\n    - Math.SQRT1_2\n    - Math.abs\n    - Math.acos\n    - Math.acosh\n    - Math.asin\n    - Math.asinh\n    - Math.atan\n    - Math.atanh\n    - Math.atan2\n    - Math.cbrt\n    - Math.ceil\n    - Math.clz32\n    - Math.cos\n    - Math.cosh\n    - Math.exp\n    - Math.expm1\n    - Math.floor\n    - Math.hypot\n    - Math.log\n    - Math.log1p\n    - Math.log10\n    - Math.max\n    - Math.min\n    - Math.pow\n    - Math.random\n    - Math.round\n    - Math.sin\n    - Math.sinh\n    - Math.sqrt\n    - Math.tan\n    - Math.tanh\n  - Number\n    - Number.isInteger\n    - Number.isFinite\n  - String\n    - String.prototype.replace\n    - String.prototype.trim\n    - String.prototype.trimRight\n    - String.prototype.trimLeft\n    - String.prototype.toUpperCase\n    - String.prototype.toLowerCase\n    - String.prototype.split\n    - String.prototype.substr\n    - String.prototype.match\n  - Function\n    - Function.prototype.apply\n    - Function.prototype.call\n  - Date\n    - Date.now\n\nTesting\n---\n\nTests are simple input (js) / output (php) comparisions.\n\n1. Create your source `.js` file at `test/fixtures/js_feature.js`\n2. Convert your `.js` to `.php` manually: `node test/generate.js js_feature.js`\n3. Run `npm test`\n\nLicense\n---\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/endel/js2php.git"
  },
  "scripts": {
    "test": "mocha ./test/suite.js"
  },
  "version": "0.1.7"
}