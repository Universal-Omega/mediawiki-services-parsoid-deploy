{
  "bugs": {
    "url": "https://github.com/h2non/requireg/issues"
  },
  "contributors": [
    {
      "name": "Tomas Aparicio",
      "email": "tomas@aparicio.me"
    },
    {
      "name": "Eugene Sharygin",
      "url": "https://github.com/eush77"
    }
  ],
  "dependencies": {
    "nested-error-stacks": "~2.0.1",
    "rc": "~1.2.7",
    "resolve": "~1.7.1"
  },
  "description": "Require and resolve global modules like a boss",
  "devDependencies": {
    "expect.js": "~0.3.1",
    "mocha": "~5.2.0",
    "rewire": "~4.0.1",
    "semver": "~5.5.0"
  },
  "directories": {
    "lib": "./lib"
  },
  "engines": {
    "node": ">= 4.0.0"
  },
  "homepage": "http://github.com/h2non/requireg",
  "keywords": [
    "global",
    "npm",
    "modules",
    "module",
    "require",
    "import",
    "resolve"
  ],
  "licenses": "MIT",
  "main": "lib/requireg",
  "name": "requireg",
  "optionalDependencies": {},
  "readme": "# requireg  [![Build Status](https://secure.travis-ci.org/h2non/requireg.png?branch=master)][2] [![NPM version](https://badge.fury.io/js/requireg.png)][3]\n\nRequire and resolve global modules in node.js like a boss.\n\n## Differences with require()\n\n`requireg` tries to find modules in global locations which are\nnot natively supported by the node.js [module resolve algorithm][1]. \n\nIt support both npm/yarn global packages installation paths.\n\nSupported locations:\n\n- $HOME/node_modules (instead of $HOME/.node_modules)\n- $HOME/node_libraries (instead of $HOME/.node_libraries)\n- $HOME/node_packages (specific of `requireg`)\n- $PREFIX/lib/node_modules (instead of $PREFIX/lib/node)\n- $NODE_MODULES (use the specific modules path environment variable)\n\n## Resolution priority\n\n1. Resolve via native `require()` (unless second parameter is true)\n2. User home directory (`$HOME` or `%USERPROFILE%`)\n3. Node installation path\n4. $NODE_MODULES (can have different multiple paths, semicolon separated)\n5. Common operative system installation paths\n\n## Installation\n\n```bash\n$ npm install requireg --save[-dev]\n```\n\n```bash\n$ yarn add requireg\n```\n\n## API\n\n### requireg(path: string, onlyGlobal: boolean = false)\n\n## Usage\n\n### Load global modules\n\n```js\nvar requireg = require('requireg')\n// require a globally installed package\nvar npm = requireg('npm')\n```\n\n### Load only global modules\n\n```js\nvar requireg = require('requireg')\n// require a globally installed package and skip local packages\nvar eslint = requireg('eslint', true)\n```\n\n### Resolve module path\n\n```js\nvar modulePath = requireg.resolve('npm')\n// returns '/usr/local/lib/node_modules/npm/lib/npm.js'\n```\n\n### Globalize it\n\n```js\nrequire('requireg').globalize()\n```\n\nNow it is globally available from any source file\n\n```js\nvar globalModule = requireg('npm')\n```\n\n### Module not found\n\n`requireg` maintains the same behavior as the native `require()`.\nIt will throw an `Error` exception if the module was not found\n\n## Considerations\n\n- Require global modules in node.js is considered anti-pattern.\nNote that you can experiment unreliability or inconsistency across different environments.\nI hope you know exactly what you do with `requireg`\n- Only node packages installed with [npm](https://npmjs.org) or [yarn](https://yarnpkg.com) are supported (which means only standardized NPM paths are supported)\n\n## Possible extra features\n\n- Custom environment variable with custom path to resolve global modules.\n\n## License\n\nReleased under MIT license\n\n[1]: http://nodejs.org/docs/latest/api/modules.html#modules_all_together\n[2]: http://travis-ci.org/h2non/requireg\n[3]: http://badge.fury.io/js/requireg\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/h2non/requireg.git"
  },
  "scripts": {
    "test": "mocha -u tdd --ui exports --reporter spec --slow 2000ms --bail"
  },
  "version": "0.2.2"
}