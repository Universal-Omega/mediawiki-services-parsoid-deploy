{
  "name": "nsp",
  "description": "The Node Security (nodesecurity.io) command line interface",
  "version": "2.0.2",
  "author": {
    "name": "^lift security"
  },
  "bin": {
    "nsp": "bin/nsp"
  },
  "dependencies": {
    "nodesecurity-npm-utils": "^3.0.0",
    "chalk": "^1.1.1",
    "cli-table": "^0.3.1",
    "https-proxy-agent": "^1.0.0",
    "joi": "^6.9.1",
    "rc": "^1.1.2",
    "semver": "^5.0.3",
    "subcommand": "^2.0.3",
    "wreck": "^6.3.0"
  },
  "devDependencies": {
    "code": "^1.5.0",
    "eslint": "^1.8.0",
    "eslint-config-nodesecurity": "^1.1.0",
    "eslint-plugin-hapi": "^2.0.0",
    "git-validate": "^2.1.0",
    "lab": "^6.1.0",
    "nock": "^2.15.0",
    "shrinkydink": "^1.0.0"
  },
  "keywords": [
    "security",
    "nsp",
    "nodesecurity"
  ],
  "license": "Apache-2.0",
  "main": "lib/index.js",
  "repository": {
    "type": "git",
    "url": "git://github.com/nodesecurity/nsp.git"
  },
  "scripts": {
    "lint": "eslint . bin/nsp",
    "setup-offline": "curl -sS https://api.nodesecurity.io/advisories -o advisories.json",
    "test": "lab -a code -t 100",
    "nsp": "bin/nsp check",
    "shrinkwrap": "npm shrinkwrap && shrinkydink"
  },
  "pre-commit": [
    "test"
  ],
  "readme": "# nsp [![Build Status](https://drone.andyet.com/api/badges/nodesecurity/nsp/status.svg)](https://drone.andyet.com/nodesecurity/nsp)\n\n## About Node Security\n\nNode Security helps you keep your node applications secure. With Node Security you can:\n\n* Make use of the CLI tool to help identify known vulnerabilities in your own projects.\n* Get access to Node Security news and information from the ^lift team.\n\n## Installing the CLI (nsp)\n\n* To install the Node Security command line tool: `npm install -g nsp`\n* Then run `nsp --help` to find out more.\n\n## Output Format\n\nYou can adjust how the client outputs findings by specifying one of the following format options.\n\n- default\n- summary\n- json\n- codeclimate\n- none\n\n## Exceptions\n\nThe Node Security CLI supports adding exceptions. These are advisories that you have evaluated and personally deemed unimportant for your project.\n\nIn order to leverage this capability, create a `.nsprc` file in the root of your project with content like the following:\n\n```js\n{\n  \"exceptions\": [\"https://nodesecurity.io/advisories/12\"]\n}\n```\n\nThe URLs used in the array should match the advisory link that the CLI reports. With this in place, you will no longer receive warnings about any advisories in the exceptions array.\n\nBe careful using this feature. If you add code later that is impacted by an excluded advisory, Node Security has no way of knowing. Keep a careful eye on your exceptions.\n\n## Proxy Support\n\nThe Node Security CLI has proxy support by using [proxy-agent](https://www.npmjs.com/package/proxy-agent).\n\nThe currently implemented protocol mappings are listed in the table below:\n\n\n| Protocol   | Example\n|:----------:|:--------:\n| `http`     | `http://proxy-server-over-tcp.com:3128`\n| `https`    | `https://proxy-server-over-tls.com:3129`\n| `socks(v5)`| `socks://username:password@some-socks-proxy.com:9050` (username & password are optional)\n| `socks5`   | `socks5://username:password@some-socks-proxy.com:9050` (username & password are optional)\n| `socks4`   | `socks4://some-socks-proxy.com:9050`\n| `pac`      | `pac+http://www.example.com/proxy.pac`\n\n\n\nTo configure the proxy set the proxy key in your `.nsprc` file. This can be put in the root of your project or in your home directory.\n\n```js\n{\n    \"proxy\": \"http://127.0.0.1:8080\"\n}\n```\n\n\n\n## Code Climate Node Security Engine\n\n`codeclimate-nodesecurity` is a Code Climate engine that wraps the Node Security CLI. You can run it on your command line using the Code Climate CLI, or Code Climate's <a href=\"http://codeclimate.com\">hosted analysis platform</a>.\n\nNote that this engine *only* works if your code has a `npm-shrinkwrap.json` file committed.\n\n### Testing\n\nFirst, build this repo with docker\n\n```\ngit clone git@github.com:nodesecurity/nsp\ncd nsp\ndocker build -t codeclimate/codeclimate-nodesecurity .\n```\n\nInstall the codeclimate CLI\n\n```\nbrew tap codeclimate/formulae\nbrew install codeclimate\n```\n\nGo into your project's directory and enable codeclimate\n\n```\ncodeclimate init\n```\n\nThen edit `.codeclimate.yml` to add the engine like so\n\n```yaml\n---\nengines:\n  nodesecurity:\n    enabled: true\nexclude_paths: []\n```\n\nAnd finally run it\n\n```\ncodeclimate analyze --dev\n```\n\n## Contact\n\nNode Security (+) is brought to you by [^lift security](https://liftsecurity.io).\n\n## License\n\n    Copyright (c) 2015 by ^Lift Security\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n    See the License for the specific language governing permissions and\n    limitations under the License.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/nodesecurity/nsp/issues"
  },
  "homepage": "https://github.com/nodesecurity/nsp#readme",
  "_id": "nsp@2.0.2",
  "_shasum": "855c0ca73810d54d628342dd6fce9785753fe9e4",
  "_resolved": "https://registry.npmjs.org/nsp/-/nsp-2.0.2.tgz",
  "_from": "https://registry.npmjs.org/nsp/-/nsp-2.0.2.tgz"
}
